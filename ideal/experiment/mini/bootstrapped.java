/*
 * Copyright 2014 The Ideal Authors. All rights reserved.
 *
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file or at
 * https://developers.google.com/open-source/licenses/bsd
 */

package ideal.experiment.mini;

import javax.annotation.Nullable;

/**
 * Autogenerated code, do not edit.
 */
public class bootstrapped {
  public interface source {
    @Nullable source the_source();
  }
  public interface source_text extends source {
    String name();
    String content();
    @Nullable source the_source();
  }
  public static class source_text_class implements source_text {
    private final String name;
    private final String content;
    public source_text_class(String name, String content) {
      this.name = name;
      this.content = content;
    }
    @Override public String name() {
      return name;
    }
    @Override public String content() {
      return content;
    }
    @Override public @Nullable source the_source() {
      return null;
    }
  }
  public interface text_position extends source {
    source_text the_source();
    int character_index();
  }
  public static class text_position_class implements text_position {
    private final source_text the_source;
    private final int character_index;
    public text_position_class(source_text the_source, int character_index) {
      this.the_source = the_source;
      this.character_index = character_index;
    }
    @Override public source_text the_source() {
      return the_source;
    }
    @Override public int character_index() {
      return character_index;
    }
  }
  public enum token_type {
    WHITESPACE,
    COMMENT,
    OPEN,
    CLOSE,
    IDENTIFIER,
    LITERAL,
    MODIFIER;
  }
  public interface token extends source {
    token_type type();
  }
  public interface simple_token extends token {
    token_type type();
    source the_source();
  }
  public static class simple_token_class implements simple_token {
    private final token_type type;
    private final source the_source;
    public simple_token_class(token_type type, source the_source) {
      this.type = type;
      this.the_source = the_source;
    }
    @Override public token_type type() {
      return type;
    }
    @Override public source the_source() {
      return the_source;
    }
  }
}
